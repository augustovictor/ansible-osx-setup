---
- hosts: localhost
  tasks:
    - name: Install homebrew
      include_role:
        name: geerlingguy.mac.homebrew

    - name: Make sure homebrew bin is in path
      ansible.builtin.lineinfile:
        path: /etc/paths
        state: present
        line: '/opt/homebrew/bin'
      become: true
      become_user: root

    - name: 'add custom homebrew repos'
      community.general.homebrew_tap:
        name: [
          adoptopenjdk/openjdk,
          fishtown-analytics/dbt,
          heroku/brew,
          homebrew/cask-versions,
          thoughtbot/formulae,
          weaveworks/tap,
          homebrew/cask-fonts,
        ]

    - name: Install core packages via brew casks
      community.general.homebrew_cask:
        name: "{{ item }}"
      ignore_errors: true
      with_items:
        - 1password
        - font-jetbrains-mono
        - datagrip
        - docker
        - intellij-idea
        - kitty
        - ngrok
        - notion
        - slack
        - sublime-text
        - telegram
        - vlc
        - shiftit
        - brave-browser
        - whatsapp
        # - zoom

    - name: "Install homebrew packages"
      community.general.homebrew:
        name: [
          # 'autoconf',
          # 'automake',
          # 'aws-iam-authenticator',
          'awscli',
          # 'coreutils',
          'curl',
          # 'direnv',
          'dnsmasq',
          'fzf',
          'gh',
          'gnu-time',
          'gpg',
          'htop',

          # 'imagemagick@6',
          'jq',
          # 'kubectx',
          'kubernetes-cli',
          'kubernetes-helm',
          # 'libtool',
          # 'libxslt',
          # 'libyaml',
          'mas',
          'openssl' ,
          # 'pkg-config',
          # 'postgresql',
          # 'rcm',
          # 'readline',
          # 'redis',
          # 'sqlite3',
          'tmux',
          # 'unixodbc',
          'unzip',
          # 'vim',
          # 'watchman',
          # 'xz',
          'yarn',
          'yq',
          # 'zlib',
          'zsh',
        ]
        state: present
        update_homebrew: true

    - name: "Install from Mac app store"
      shell: mas install {{ item }}
      with_items:
        - 497799835  # xcode
        - 876540291  # Copy'Em
        - 1380017883  # Paste queue
        - 975890633  # HotKey
        - 973134470  # Be focused
      tags:
        - appstore

    - name: "Reduce key repetition interval"
      shell: |
        defaults write -g InitialKeyRepeat -int 10 # normal minimum is 15 (225 ms)
        defaults write -g KeyRepeat -int 1 # normal minimum is 2 (30 ms)

    # - name: Get the path to ZSH
    #   become: false
    #   local_action: command which zsh
    #   register: zsh_path

    # - name: "Ensure homebrew zsh is in allowed shells"
    #   lineinfile:
    #     path: /etc/shells
    #     line: "{{ zsh_path.stdout }}"
    #   become: true

    # - name: Install Oh My ZSH
    #   shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
    #   args:
    #     creates: "/Users/{{ lookup('env', 'USER') }}/.oh-my-zsh"

    # - name: Set ZSH as the default shell
    #   shell: chsh -s $(which zsh) {{ lookup('env', 'USER') }}
    #   become: true

    # - name: "Create a default ZSH configuration"
    #   template:
    #     src: templates/.zshrc.j2
    #     dest: /Users/{{ lookup('env', 'USER') }}/.zshrc
    #     owner: "{{ lookup('env', 'USER') }}"
    #     force: true

    - git:
        repo: https://github.com/asdf-vm/asdf.git
        dest: "/Users/{{ lookup('env', 'USER') }}/.asdf"
        version: v0.11.3

    - name: Configure ~/.gitconfig
      become: true
      become_user: root
      git_config:
        name: user.name
        scope: global
        value: augustovictor
      tags:
        - git

    - name: Configure ~/.gitconfig
      become: true
      become_user: root
      git_config:
        name: user.email
        scope: global
        value: victor.dev.costa@gmail.com
      tags:
        - git

    - name: Configure ~/.gitconfig
      become: true
      become_user: root
      git_config:
        name: commit.gpgsign
        scope: global
        value: true
      tags:
        - git

    - name: Configure ~/.gitconfig
      become: true
      become_user: root
      git_config:
        name: gpg.program
        scope: global
        value: gpg
      tags:
        - git

    - name: Configure ~/.gitconfig
      become: true
      become_user: root
      git_config:
        name: color.ui
        scope: global
        value: auto
      tags:
        - git

    - name: Configure ~/.gitconfig
      become: true
      become_user: root
      blockinfile:
        path: /Users/{{ lookup('env', 'USER') }}/.ssh/config
        marker: "# {mark} ANSIBLE MANAGED BLOCK"
        block: |
          Host *
            IdentityAgent "~/Library/Group Containers/2BUA8C4S2C.com.1password/t/agent.sock"
      tags:
        - git

    - name: "Create a default asdf configuration"
      template:
        src: templates/.asdfrc.j2
        dest: /Users/{{ lookup('env', 'USER') }}/.asdfrc
        owner: "{{ lookup('env', 'USER') }}"
        force: true

    - name: "Install asdf plugins"
      shell: |
        source /Users/{{ lookup('env', 'USER') }}/.asdf/asdf.sh
        asdf plugin-add {{ item }} || exit 0
      with_items:
        - ruby
        - nodejs
        - python
        - java
        - neovim
      tags:
        - node
        - ruby
        - python
        - java

    - name: "Install Default Java"
      shell: |
        source /Users/{{ lookup('env', 'USER') }}/.asdf/asdf.sh
        asdf install java adoptopenjdk-12.0.1+12
        asdf global java adoptopenjdk-12.0.1+12

    - name: "Set kubectl alias"
      lineinfile:
        path: /Users/{{ lookup('env', 'USER') }}/.zshrc
        line: "alias k=kubectl"

    - name: "Allow finger id for terminal password"
      become: true
      become_user: root
      lineinfile:
        path: /etc/pam.d/sudo
        line: "auth\tsufficient\tpam_tid.so"

    - name: "Set JAVA_HOME"
      lineinfile:
        path: /Users/{{ lookup('env', 'USER') }}/.zshrc
        line: ". /Users/{{ lookup('env', 'USER') }}/.asdf/plugins/java/set-java-home.zsh"

    - name: "Reload shell"
      shell: source /Users/{{ lookup('env', 'USER') }}/.asdf/asdf.sh

    - name: "Install neovim"
      shell: |
        source /Users/{{ lookup('env', 'USER') }}/.asdf/asdf.sh
        asdf install neovim nightly
        asdf global neovim nightly

    - name: "Install Default Python"
      shell: |
        source /Users/{{ lookup('env', 'USER') }}/.asdf/asdf.sh
        asdf install python 3.7.8
        asdf global python 3.7.8
        pip3 install ansible
        asdf reshim python

    - name: "Install Default Ruby"
      shell: |
        source /Users/{{ lookup('env', 'USER') }}/.asdf/asdf.sh
        asdf install ruby 3.0.2
        asdf global ruby 3.0.2
        gem install bundler
        gem install cocoapods
        gem install rubocop
        gem install solargraph

    - name: "Install default node"
      shell: |
        source /Users/{{ lookup('env', 'USER') }}/.asdf/asdf.sh
        bash /Users/{{ lookup('env', 'USER') }}/.asdf/plugins/nodejs/bin/import-release-team-keyring
        asdf install nodejs 18.0.0
        asdf install nodejs 16.4.2
        asdf global nodejs 16.4.2
      tags:
        - node

    - name: re-generate bins now we've installed some yarn packages
      shell: asdf reshim nodejs
      tags:
        - node
